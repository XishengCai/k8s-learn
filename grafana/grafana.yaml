apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: grafana
    version: latest
    app.kubernetes.io/name: grafana
    app.kubernetes.io/release: grafana
  name: grafana
  namespace: kube-
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/release: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/release: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
          env:
            - name: GF_SERVER_HTTP_PORT
              value: "3000"
              # The following env variables are required to make Grafana accessible via
              # the kubernetes api-server proxy. On production clusters, we recommend
              # removing these env variables, setup auth for grafana, and expose the grafana
              # service using a LoadBalancer or a public IP.
            - name: GF_AUTH_BASIC_ENABLED
              value: "false"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_SERVER_ROOT_URL
              # If you're only using the API Server proxy, set this value instead:
              # value: /api/v1/namespaces/kube-system/services/monitoring-grafana/proxy
              value: /
      volumes:
        - name: grafana-storage
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
    version: latest
    app.kubernetes.io/name: grafana
    app.kubernetes.io/release: grafana
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/tcp-probe: 'true'
    prometheus.io/tcp-probe-port: '80'
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/release: grafana
